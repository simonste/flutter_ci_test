name: flutter CI
on: [push]
env:
  FLUTTER_VERSION: 3.13.8
jobs:
  test-android:
    strategy:
      matrix:
        device:
          - "Nexus 6"
      fail-fast: true
    runs-on: macos-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      # - name: Setup java
      #   uses: actions/setup-java@v3
      #   with:
      #     distribution: "zulu"
      #     java-version: "12.x"
      #     cache: "gradle"

      # - name: Setup flutter
      #   uses: subosito/flutter-action@v2
      #   with:
      #     flutter-version: ${{ env.FLUTTER_VERSION }}
      #     channel: "stable"
      #     cache: true

      # - name: Get dependencies
      #   run: flutter pub get

      # - name: Test
      #   run: flutter test
      # # - name: Integration test
      # #   uses: reactivecircus/android-emulator-runner@v2
      # #   with:
      # #     api-level: 29
      # #     profile: ${{ matrix.device }}
      # #     script: flutter test integration_test

      # - name: Take screenshots
      #   uses: reactivecircus/android-emulator-runner@v2
      #   with:
      #     api-level: 29
      #     profile: ${{ matrix.device }}
      #     script: |
      #       sed -i '' -e 's/driverTest = false/driverTest = true/g' integration_test/screenshot_test.dart
      #       flutter drive --driver=screenshot_test/driver.dart --target=integration_test/screenshot_test.dart
      # - name: screenshot artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: screenshots_android_${{ matrix.device }}
      #     path: screenshots/*

  build-android:
    # if: ${{ github.ref == 'refs/heads/main' }}
    needs: [test-android]
    runs-on: macos-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "12.x"
          cache: "gradle"

      - name: Setup flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Build
        run: flutter build appbundle

      - name: Sign App Bundle
        uses: ilharp/sign-android-release@v1
        with:
          releaseDir: build/app/outputs/bundle/release/
          signingKey: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          keyAlias: ${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}

      - name: android app bundle artifact
        uses: actions/upload-artifact@v3
        with:
          name: bundle
          path: |
            build/app/outputs/bundle/release/app-release-signed.aab
            build/app/outputs/mapping/release/mapping.txt

  deploy-android:
    needs: [build-android]
    runs-on: macos-latest
    steps:
      - name: Get release-bundle from artifacts
        uses: actions/download-artifact@v3
        with:
          name: bundle

      - name: Upload to Play Store (Internal Testing)
        uses: r0adkll/upload-google-play@v1.0.18
        with:
          serviceAccountJsonPlainText: ${{ secrets.ANDROID_SERVICE_ACCOUNT_JSON }}
          packageName: simonste.ch.homeremote
          releaseFiles: bundle/release/app-release-signed.aab
          mappingFile: mapping/release/mapping.txt
          track: internal

  test-ios:
    if: ${{ false }}
    strategy:
      matrix:
        device:
          - "iPhone 14 Simulator"
          - "iPad Air (5th generation)"
      fail-fast: true
    runs-on: macos-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Setup xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: "List all simulators"
        run: "xcrun xctrace list devices"
      - name: "Start Simulator"
        run: |
          UDID=$(xcrun xctrace list devices | grep -m 1 "^${{ matrix.device }}" | awk '{gsub(/[()]/,""); print $NF}')
          xcrun simctl boot "${UDID:?No Simulator with this name found}"

      - name: Setup flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.7.1"
          channel: "stable"
          cache: true

      - name: Get dependencies
        run: flutter pub get
      - name: Test
        run: flutter test
      - name: Integration test
        run: flutter test integration_test/app_test.dart --verbose

      - name: Take screenshots
        run: |
          # Set a variable with Flutter's path
          FLUTTER_PATH="$(which flutter)"
          FLUTTER_PATH=${FLUTTER_PATH/\/bin\/flutter/""}
          # Update IntegrationTestPlugin.m
          sed -i '' -e "51s/^//p; 51s/^.*/  \[\[IntegrationTestPlugin instance\] setupChannels\:registrar\.messenger\]\;/" $FLUTTER_PATH'/packages/integration_test/ios/Classes/IntegrationTestPlugin.m'
          flutter drive --driver=test_driver/integration_test.dart --target=integration_test/screenshot_test.dart
      - name: screenshot artifact
        uses: actions/upload-artifact@v3
        with:
          name: screenshots_ios
          path: screenshots/*

  build-ios:
    needs: [test-ios]
    runs-on: macos-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Setup xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Install the Apple certificate
        uses: apple-actions/import-codesign-certs@master
        with:
          p12-file-base64: ${{ secrets.P12_BASE64 }}
          p12-password: ${{ secrets.P12_PASSWORD }}

      - name: Install the provisioning profile
        env:
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
        run: |
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Setup flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.7.1"
          channel: "stable"
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Build
        run: |
          flutter build ipa --release --export-options-plist=ios/Runner/ExportOptions.plist

      - name: ipa artifact
        uses: actions/upload-artifact@v3
        with:
          name: ipa
          path: build/ios/ipa/*.ipa

  deploy-ios:
    if: ${{ false }} # disabled
    needs: [build-ios]
    runs-on: macos-latest
    steps:
      - name: Get release-ipa from artifacts
        uses: actions/download-artifact@v3
        with:
          name: ipa

      - name: Install API Key
        env:
          API_KEY: ${{ secrets.APPSTORE_API_KEY_ID }}
          APPSTORE_API_PRIVATE_KEY_BASE64: ${{ secrets.APPSTORE_API_PRIVATE_KEY_BASE64 }}
        run: |
          mkdir ~/private_keys
          echo -n "$APPSTORE_API_PRIVATE_KEY_BASE64" | base64 --decode -o ~/private_keys/AuthKey_$API_KEY.p8

      - name: upload app
        env:
          API_KEY: ${{ secrets.APPSTORE_API_KEY_ID }}
          API_ISSUER: ${{ secrets.APPSTORE_ISSUER_ID }}
          APP_PATH: "*.ipa"
        run: |
          xcrun altool --validate-app -f $APP_PATH -t ios --apiKey $API_KEY --apiIssuer $API_ISSUER
          xcrun altool --upload-app -f $APP_PATH -t ios --apiKey $API_KEY --apiIssuer $API_ISSUER
